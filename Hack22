----- Game Services
Debris = game:GetService("Debris")
Players = game:GetService("Players")
CoreGui = game:GetService("CoreGui")
TweenService = game:GetService("TweenService")
UserInputService = game:GetService("UserInputService")




------ Modules 
local Games = {
	_CurrentGame = nil;
	Sanctum = {
		ID = 9212627552;
		Moderators = {2817760,81919939}
	};
	NotRogueLineage = {
		ID = 9149676498;
		Moderators = {1935133078,466077984,668057530,56806120,2493139163,123952577,1448136433,142926242}
	};
}
local Exploit = {
	AttachingToBack = false;
	Teleporting = false;
	NoFallDamage = false;
	AutoBagPickup = false;
	_Font = "Kalam"
}


------ Functions
function Alert(ToAlert)
	local Sound = Instance.new("Sound",ToAlert.Character:WaitForChild("HumanoidRootPart"))
	Sound.SoundId = "rbxassetid://6043410483"
	Sound:Play()
	Debris:AddItem(Sound,2)
end
function CheckIfMod(PlayerToCheck)
	if table.find(Games[Games._CurrentGame].Moderators,PlayerToCheck.UserId) then
		return true
	else
		return false
	end
end
function CheckIfIllusionist(PlayerToCheck)
	if PlayerToCheck.Backpack:FindFirstChild("Observe") then
		return true
	else
		return false
	end
end
function ImportantLeft(Type,Victim)
	Alert(Exploiter)
	local NotificationInfo = {Title= Type..": "..Victim.Name,Text= Type.." Left the server",Duration=5} game.StarterGui:SetCore ("SendNotification", NotificationInfo)
end
function ImportantInServer(Type,Victim)
	Alert(Exploiter)
	local NotificationInfo = {Title= Type..": "..Victim.Name,Text= Type.." In The Server be careful",Duration=5} game.StarterGui:SetCore ("SendNotification", NotificationInfo)
end

function CheckForMods()
	for _,v in pairs(Players:GetChildren()) do
		if CheckIfMod(v) == true then
			ImportantInServer("Moderator",v)
		end
	end
end
function CheckForIllus()
	for _,v in pairs(Players:GetChildren()) do
		if CheckIfIllusionist(v) == true then
			ImportantInServer("Illusionist",v)
		end
	end
end
function CheckWhatGame()
	local _game = nil
	local ID = game.PlaceId
	if ID == Games.Sanctum.ID then
		_game = "Sanctum"
	elseif ID == Games.NotRogueLineage.ID then
		_game = "NotRogueLineage"
	else
		_game = "Non Supported Game"
	end
	return _game
end
function ItemDropped(ItemName,ToolBag)
	local NotificationInfo = {Title= "Item Dropped",Text= "A "..ItemName.." Has been dropped.",Duration=5} game.StarterGui:SetCore ("SendNotification", NotificationInfo)
	if Exploit.AutoBagPickup == true then
		while ToolBag do
			task.wait()
			ToolBag.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
		end
	end
end
function PickUpBags()
	if Exploit.AutoBagPickup == true then
	for _,v in pairs(workspace:WaitForChild("Thrown"):GetChildren()) do
		if v.Name == "ToolBag" then
				ItemDropped(v:FindFirstChild("BillboardGui"):FindFirstChildWhichIsA("TextLabel").Text,v)
		end
		end
		end
end
function SkycastleTP()
	local Player = game:GetService("Players").LocalPlayer
	Player.Character.HumanoidRootPart.CFrame = CFrame.new(1324.71094, 3808.68994, 199.841797)
end
function AttachToBack(Target,Exploiter)
	if Exploit.AttachingToBack == false and not Exploit.Teleporting == true then
		Exploit.AttachingToBack = true
		task.spawn(function()
			while Exploit.AttachingToBack == true  do
				task.wait()
				Exploiter.Character.HumanoidRootPart.CFrame = Target.HumanoidRootPart.CFrame + Vector3.new(0,0,3)
			end
		end)
	elseif Exploit.AttachingToBack == true then
		Exploit.AttachingToBack = false
	end
end
Exploiter = game.Players.LocalPlayer
ExploitersCharacter = Exploiter.Character
ExploiterMouse = Exploiter:GetMouse()
function StartExploit()
	Games._CurrentGame = CheckWhatGame()
	local ScreenGui  = Instance.new("ScreenGui")
	ScreenGui.Name = "GalaxyExploit2"
    local Frame = Instance.new("Frame",ScreenGui)
	ScreenGui.Parent = game.Players.LocalPlayer.PlayerGui
	Frame.Position = UDim2.new(0.431, 0,0.029, 0)
	Frame.Size = UDim2.new(0, 300,0, 100)
	Frame.BackgroundColor = BrickColor.Black()
	local GalaxySploitLabel = Instance.new("TextLabel",Frame)
	GalaxySploitLabel.TextWrapped = true
	GalaxySploitLabel.TextScaled = true
	GalaxySploitLabel.BackgroundTransparency = 1
	GalaxySploitLabel.Text = "Galaxy Hub Loaded For : "..CheckWhatGame()
	GalaxySploitLabel.TextColor = BrickColor.White()
	GalaxySploitLabel.Size = UDim2.new(0, 200,0, 32)
	GalaxySploitLabel.Font = Enum.Font[Exploit._Font]
	task.wait(1)
    local HUB = Instance.new("ScreenGui",Exploiter.PlayerGui)
	local HUBFrame = Instance.new("Frame",HUB)
	local UICorner = Instance.new("UICorner",HUBFrame)
	UICorner.CornerRadius = UDim.new(0, 8)
	HUBFrame.Size = UDim2.new(0, 232,0, 643)
	HUBFrame.BorderSizePixel = 0
	HUBFrame.Position = UDim2.new(0.077, 0,0.104, 0)
	local GalaxyHubText = Instance.new("TextLabel",HUBFrame)
	GalaxyHubText.Position = UDim2.new(0.069, 0,-0.078, 0)
	GalaxyHubText.Size = UDim2.new(0, 200,0, 50)
	GalaxyHubText.TextWrapped = true
	GalaxyHubText.Text = "Galaxy Hub | https://discord.gg/uwFPa8Gm"
	GalaxyHubText.TextScaled = true
	GalaxyHubText.Font = Enum.Font[Exploit._Font]
	GalaxyHubText.TextColor = BrickColor.Black()
	GalaxyHubText.BackgroundTransparency = 1
	local HUBLabel = Instance.new("TextLabel",HUBFrame)
	HUBLabel.BackgroundTransparency = 1
	HUBLabel.TextColor = BrickColor.Black()
	HUBLabel.Text = "Locals"
	HUBLabel.Font = Enum.Font[Exploit._Font]
	HUBLabel.Size = UDim2.new(0, 200,0, 50)
	HUBLabel.TextWrapped = true
	HUBLabel.TextScaled = true
	HUBLabel.Position = UDim2.new({0.069, 0},{0, 0})
	local Line = Instance.new("TextLabel",HUBFrame)
	Line.Text = "__________________"
	Line.TextWrapped = true
	Line.TextScaled = true
	Line.Font = Enum.Font[Exploit._Font]
	Line.TextColor = BrickColor.Black()
	Line.Size = UDim2.new(0, 232,0, 50)
	Line.Position = UDim2.new(-0.004, 0,0.02, 0)
	Line.BackgroundTransparency = 1
	local Options = Instance.new("Frame",HUBFrame)
	Options.BackgroundTransparency = 1
	Options.Size = UDim2.new(0, 130,0, 591)
	Options.Position = UDim2.new(0.004, 0,0.078, 0)
	local UIGridLayout = Instance.new("UIGridLayout",Options)
	UIGridLayout.CellSize = UDim2.new(0, 150,0, 50)
	UIGridLayout.CellPadding = UDim2.new(0, 6,0, 5)
	local NoFallToggle = Instance.new("TextButton",Options)
	NoFallToggle.Name = "NoFall"
	NoFallToggle.TextWrapped = true
	NoFallToggle.TextScaled = true
	NoFallToggle.Font = Enum.Font[Exploit._Font]
	NoFallToggle.Size = UDim2.new(0, 131,0, 50)
	NoFallToggle.Position = UDim2.new(-0.004, 0,0.112, 0)
	if Exploit.NoFallDamage == false then
		NoFallToggle.Text = "Toggle No Fall [Off]"
		ExploitersCharacter:FindFirstChild("CharacterHandler"):FindFirstChild("Remotes").ApplyFallDamage.Name = "Ban"
	elseif Exploit.NoFallDamage == true then
		NoFallToggle.Text = "Toggle No Fall [On]"
		ExploitersCharacter:FindFirstChild("CharacterHandler"):FindFirstChild("Remotes").Ban.Name = "ApplyFallDamage"
	end
	NoFallToggle.BackgroundTransparency = 1
	NoFallToggle.BackgroundColor = BrickColor.Gray()
	local AutoBagPickupToggle = Instance.new("TextButton",Options)
	AutoBagPickupToggle.Name = "AutobagPickup"
	AutoBagPickupToggle.Font = Enum.Font[Exploit._Font]
	AutoBagPickupToggle.Size = UDim2.new(0, 131,0, 50)
	AutoBagPickupToggle.TextScaled = true
	AutoBagPickupToggle.TextWrapped = true
	AutoBagPickupToggle.BackgroundTransparency = 1
	local SkycastleTeleport = Instance.new("TextButton",Options)
	SkycastleTeleport.Name = "SkyTP"
	SkycastleTeleport.Font = Enum.Font[Exploit._Font]
	SkycastleTeleport.Size = UDim2.new(0, 131,0, 50)
	SkycastleTeleport.Text = "Teleport To Skycastle Throne"
	SkycastleTeleport.TextScaled = true
	SkycastleTeleport.TextWrapped = true
	SkycastleTeleport.BackgroundTransparency = 1
	if Exploit.AutoBagPickup == false then
		AutoBagPickupToggle.Text = "Toggle AutoBagPickup [Off]"
	elseif Exploit.AutoBagPickup == true then
		AutoBagPickupToggle.Text = "Toggle AutoBagPickup [On]"
		PickUpBags()
	end
	for _,v in pairs(Options:GetChildren()) do
		if v:IsA("TextButton") then
			v.MouseButton1Down:Connect(function()
				if v.Name == "NoFall" then 
					if Exploit.NoFallDamage == false then
						Exploit.NoFallDamage = true
						NoFallToggle.Text = "Toggle No Fall [ON]"
						ExploitersCharacter:FindFirstChild("CharacterHandler"):FindFirstChild("Remotes").ApplyFallDamage.Name = "Ban"
					elseif Exploit.NoFallDamage == true then
						Exploit.NoFallDamage = false
						NoFallToggle.Text = "Toggle No Fall [Off]"
						ExploitersCharacter:FindFirstChild("CharacterHandler"):FindFirstChild("Remotes").Ban.Name = "ApplyFallDamage"
					end
				elseif v.Name == "AutobagPickup"	then
					if Exploit.AutoBagPickup == false then
						AutoBagPickupToggle.Text = "Toggle AutoBagPickup [On]"
						Exploit.AutoBagPickup = true
						PickUpBags()
					elseif Exploit.AutoBagPickup == true then
						AutoBagPickupToggle.Text = "Toggle AutoBagPickup [Off]"
						Exploit.AutoBagPickup = false
					end					
				elseif v.Name == "SkyTP" then
					SkycastleTP()
				end 
			
			end)
			v.MouseEnter:Connect(function()
				TweenService:Create(v,TweenInfo.new(0.5),{
					TextColor3 = Color3.new(0.666667, 0, 0)
				}):Play()
			end)
			v.MouseLeave:Connect(function()
				TweenService:Create(v,TweenInfo.new(0.5),{
					TextColor3 = Color3.new(0, 0, 0)
				}):Play()
			end)
		end
	end
	local DownTween = TweenService:Create(Frame,TweenInfo.new(1),{
		Position = UDim2.new(0.431, 0,0.445, 0)
	})
	DownTween:Play()
	DownTween.Completed:Connect(function()
		TweenService:Create(GalaxySploitLabel,TweenInfo.new(1),{
			TextTransparency = 1
		}):Play()
		TweenService:Create(Frame,TweenInfo.new(1),{
			BackgroundTransparency = 1
		}):Play()
		Debris:AddItem(ScreenGui,2)
	end)
	UserInputService.InputBegan:Connect(function(Input,IsTyping)
		if IsTyping then
			warn("Typing")
			return 
		end
		if Input.KeyCode == Enum.KeyCode.X then
			if Exploit.AttachingToBack == true then
				return
			end
			local Part = Instance.new("Part",workspace)
			Part.CFrame = ExploiterMouse.Hit
			Part.Name = "æ•°"
			Part.Anchored = true
			Part.Transparency = 1
			Part.CanCollide = false
			local Check = Part.Position - ExploitersCharacter.HumanoidRootPart.Position
			if Check.Magnitude < 1000 then
				Exploit.Teleporting = true
				local Telepoort = TweenService:Create(ExploitersCharacter.HumanoidRootPart,TweenInfo.new(3),{
					CFrame = Part.CFrame
				})
				Telepoort:Play()
				Telepoort.Completed:Connect(function()
					Exploit.Teleporting = false			
					Debris:AddItem(Part,1)
				end)
			else
				Part:Destroy()
			end
		elseif Input.KeyCode == Enum.KeyCode.Z then
			local Targets = workspace.Live
			for _,v in pairs(Targets:GetChildren()) do
				if v:FindFirstChild("Humanoid") then
					local Distance = v.HumanoidRootPart.Position - Exploiter.Character.HumanoidRootPart.Position
					if Distance.Magnitude < 150 and not v.Name == Exploiter.Name then
						warn("Found To Attach")
						AttachToBack(v,Exploiter)
					end
				end
			end
		end
	end)
	local NotificationInfo = {Title="Click Teleport Activated",Text="Click Teleport Binded to Key : X",Duration=math.huge} game.StarterGui:SetCore ("SendNotification", NotificationInfo)
	workspace:WaitForChild("Thrown").ChildAdded:Connect(function(v)
		if v.Name == "ToolBag" then
			task.wait()
			ItemDropped(v:FindFirstChild("BillboardGui"):FindFirstChildWhichIsA("TextLabel").Text,v)
		end
	end)
end
--Rest of code
StartExploit()
workspace.Live.ChildAdded:Connect(function(v)
	if v.Name == Exploiter.Name then
		StartExploit()
	end
end)
Players.ChildAdded:Connect(function(AddedPlayer)
	if CheckIfMod(AddedPlayer) == true then
		ImportantInServer("Moderator", AddedPlayer)
	end
	if CheckIfIllusionist(AddedPlayer) == true then
		ImportantInServer("Illusionist",AddedPlayer)
	end
end)
Players.ChildRemoved:Connect(function(RemovedPlayer)
	if CheckIfMod(RemovedPlayer) == true then
		ImportantLeft("Moderator",RemovedPlayer)
	end
	if CheckIfIllusionist(RemovedPlayer) == true then
		ImportantLeft("Illusionist",RemovedPlayer)
	end
end)
task.wait(1)
CheckForMods()
CheckForIllus()
